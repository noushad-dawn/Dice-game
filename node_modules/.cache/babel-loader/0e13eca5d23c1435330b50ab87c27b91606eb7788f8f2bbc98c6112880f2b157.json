{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Noushad\\\\Documents\\\\React_projects\\\\dice\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport StartPage from './Components/StartPage';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isSelected, SetIsSelected] = useState(false);\n  const togglePlay = () => {\n    SetIsSelected(pre);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(StartPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n_s(App, \"e0naHbmmcO0yOz3tVR64mEPRULU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","StartPage","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isSelected","SetIsSelected","togglePlay","pre","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Noushad/Documents/React_projects/dice/src/App.js"],"sourcesContent":["import React, { useState } from 'react'\nimport './App.css'\nimport StartPage from './Components/StartPage';\n\nconst App = () => {\n\n  const [isSelected,SetIsSelected] = useState(false);\n  const togglePlay =()=>{\n    SetIsSelected(pre)\n  }\n  return (\n   <>\n   <StartPage/>\n   </>\n  )\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB,OAAOC,SAAS,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE/C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEhB,MAAM,CAACC,UAAU,EAACC,aAAa,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAClD,MAAMU,UAAU,GAAEA,CAAA,KAAI;IACpBD,aAAa,CAACE,GAAG,CAAC;EACpB,CAAC;EACD,oBACCR,OAAA,CAAAE,SAAA;IAAAO,QAAA,eACAT,OAAA,CAACF,SAAS;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC,gBACV,CAAC;AAEN,CAAC;AAAAT,EAAA,CAXKD,GAAG;AAAAW,EAAA,GAAHX,GAAG;AAaT,eAAeA,GAAG;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}